---
title: "Slidedeck"
subtitle: "Create beautiful interactive slide decks with Reveal.js"
format:
  revealjs: 
    slide-number: true
    css: [slidedeck.css, circular-progress-bar.css]
execute:
  echo: false
  warning: false    
---

## Hello, There

This presentation will show you examples of what you can do with Quarto and [Reveal.js](https://revealjs.com), including:

-   Presenting code and LaTeX equations
-   Including computations in slide output
-   Image, video, and iframe backgrounds
-   Fancy transitions and animations
-   Printing to PDF

...<div class="foo">and much more</div>

<form>  
  <input type="button" value="Say Hello" onclick="msg()"/>  
</form> 

<script type="text/javascript">
  function msg(){  
    alert("Hello, Local Slidedeck Script!");  
  }
</script>  

<script type="text/javascript" src="https://raw.githack.com/vanHeemstraSystems/quarto-revealjs/main/slidedeck.js"></script>

## Progress

```{=html}
<div class="container">
  <div class="circular-progress">
    <span class="progress-value">0%</span>
    <span class="progress-loaded-value">0%</span>
  </div>
  <span class="text">Progress</span>
</div>
```

<script type="text/javascript">
  
function getPromise(URL) {
  let promise = new Promise(function (resolve, reject) {
    let req = new XMLHttpRequest();
    req.open("GET", URL);
    req.onload = function () {
      if (req.status == 200) {
        resolve(req.response);
      } else {
        reject("There is an error!");
      }
    };
    req.send();
  });
  return promise;
}

const ALL_PROGRESS_URL = 'https://raw.githack.com/vanHeemstraSystems/quarto-revealjs/main/data/progress.json';  

let promise = getPromise(ALL_PROGRESS_URL);

let loading = true;
loading && console.log('Loading ...'); 

const consumer = () => {  
    promise.finally(() => {
      loading = false;
      console.log(`Promise Settled and loading is ${loading}`);
    }).then((result) => {
      data = JSON.parse(result);
      console.log(data);
  
      let circularProgress = document.querySelector(".circular-progress"),
          progressValue = document.querySelector(".progress-value"),
          progressLoadedValue = document.querySelector(".progress-loaded-value");

      let progressStartValue = 0,    
          progressEndValue = 90,
          progressLoadedValue = 55,
          speed = 100;

      let progress = setInterval(() => {
          progressStartValue++;
          progressValue.textContent = `${progressStartValue}%`
          progressLoadedValue.textContent = `${progressLoadedEndValue}%`
          circularProgress.style.background = `conic-gradient(#7d2ae8 ${progressStartValue * 3.6}deg, #ededed 0deg)`
          if(progressStartValue == progressEndValue){
              clearInterval(progress);
          }
      }, speed);  
  
      // return data;
    }).catch((error) => {
      console.log(error)
    });
}

let progressLoadedEndValue = consumer();

/*
let progressData = fetch("https://raw.githack.com/vanHeemstraSystems/quarto-revealjs/main/data/progress.json", {
    mode: 'cors',
    headers: {
      'Access-Control-Allow-Origin':'*'
    }
  })
  .then(res => res.json());
*/  

</script>
